var _user$project$Symbols$symbols = {
	ctor: '::',
	_0: _elm_lang$core$Native_Utils.chr('['),
	_1: {
		ctor: '::',
		_0: _elm_lang$core$Native_Utils.chr(']'),
		_1: {
			ctor: '::',
			_0: _elm_lang$core$Native_Utils.chr('{'),
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Native_Utils.chr('}'),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Native_Utils.chr('('),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Native_Utils.chr(')'),
						_1: {
							ctor: '::',
							_0: _elm_lang$core$Native_Utils.chr('<'),
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Native_Utils.chr('>'),
								_1: {
									ctor: '::',
									_0: _elm_lang$core$Native_Utils.chr('\"'),
									_1: {
										ctor: '::',
										_0: _elm_lang$core$Native_Utils.chr('\''),
										_1: {
											ctor: '::',
											_0: _elm_lang$core$Native_Utils.chr('='),
											_1: {
												ctor: '::',
												_0: _elm_lang$core$Native_Utils.chr(','),
												_1: {
													ctor: '::',
													_0: _elm_lang$core$Native_Utils.chr('.'),
													_1: {
														ctor: '::',
														_0: _elm_lang$core$Native_Utils.chr(','),
														_1: {
															ctor: '::',
															_0: _elm_lang$core$Native_Utils.chr(';'),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Symbols$sym = A2(
	_elm_tools$parser$Parser_ops['|='],
	_elm_tools$parser$Parser$succeed(_elm_lang$core$Basics$identity),
	_elm_tools$parser$Parser$oneOf(
		A2(
			_elm_lang$core$List$map,
			_elm_tools$parser$Parser$symbol,
			A2(_elm_lang$core$List$map, _elm_lang$core$Basics$toString, _user$project$Symbols$symbols))));
var _user$project$Symbols$digits = {
	ctor: '::',
	_0: _elm_lang$core$Native_Utils.chr('0'),
	_1: {
		ctor: '::',
		_0: _elm_lang$core$Native_Utils.chr('1'),
		_1: {
			ctor: '::',
			_0: _elm_lang$core$Native_Utils.chr('2'),
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Native_Utils.chr('3'),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Native_Utils.chr('4'),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Native_Utils.chr('5'),
						_1: {
							ctor: '::',
							_0: _elm_lang$core$Native_Utils.chr('6'),
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Native_Utils.chr('7'),
								_1: {
									ctor: '::',
									_0: _elm_lang$core$Native_Utils.chr('8'),
									_1: {
										ctor: '::',
										_0: _elm_lang$core$Native_Utils.chr('9'),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Symbols$digit = A2(
	_elm_tools$parser$Parser_ops['|='],
	_elm_tools$parser$Parser$succeed(_elm_lang$core$Basics$identity),
	_elm_tools$parser$Parser$oneOf(
		A2(
			_elm_lang$core$List$map,
			_elm_tools$parser$Parser$symbol,
			A2(_elm_lang$core$List$map, _elm_lang$core$Basics$toString, _user$project$Symbols$digits))));
var _user$project$Symbols$letters = {
	ctor: '::',
	_0: _elm_lang$core$Native_Utils.chr('A'),
	_1: {
		ctor: '::',
		_0: _elm_lang$core$Native_Utils.chr('B'),
		_1: {
			ctor: '::',
			_0: _elm_lang$core$Native_Utils.chr('C'),
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Native_Utils.chr('D'),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Native_Utils.chr('E'),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Native_Utils.chr('F'),
						_1: {
							ctor: '::',
							_0: _elm_lang$core$Native_Utils.chr('G'),
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Native_Utils.chr('H'),
								_1: {
									ctor: '::',
									_0: _elm_lang$core$Native_Utils.chr('I'),
									_1: {
										ctor: '::',
										_0: _elm_lang$core$Native_Utils.chr('J'),
										_1: {
											ctor: '::',
											_0: _elm_lang$core$Native_Utils.chr('K'),
											_1: {
												ctor: '::',
												_0: _elm_lang$core$Native_Utils.chr('L'),
												_1: {
													ctor: '::',
													_0: _elm_lang$core$Native_Utils.chr('M'),
													_1: {
														ctor: '::',
														_0: _elm_lang$core$Native_Utils.chr('N'),
														_1: {
															ctor: '::',
															_0: _elm_lang$core$Native_Utils.chr('O'),
															_1: {
																ctor: '::',
																_0: _elm_lang$core$Native_Utils.chr('P'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$core$Native_Utils.chr('Q'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$core$Native_Utils.chr('R'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$core$Native_Utils.chr('S'),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$core$Native_Utils.chr('T'),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$core$Native_Utils.chr('U'),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$core$Native_Utils.chr('V'),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$core$Native_Utils.chr('W'),
																							_1: {
																								ctor: '::',
																								_0: _elm_lang$core$Native_Utils.chr('X'),
																								_1: {
																									ctor: '::',
																									_0: _elm_lang$core$Native_Utils.chr('Y'),
																									_1: {
																										ctor: '::',
																										_0: _elm_lang$core$Native_Utils.chr('Z'),
																										_1: {
																											ctor: '::',
																											_0: _elm_lang$core$Native_Utils.chr('a'),
																											_1: {
																												ctor: '::',
																												_0: _elm_lang$core$Native_Utils.chr('b'),
																												_1: {
																													ctor: '::',
																													_0: _elm_lang$core$Native_Utils.chr('c'),
																													_1: {
																														ctor: '::',
																														_0: _elm_lang$core$Native_Utils.chr('d'),
																														_1: {
																															ctor: '::',
																															_0: _elm_lang$core$Native_Utils.chr('e'),
																															_1: {
																																ctor: '::',
																																_0: _elm_lang$core$Native_Utils.chr('f'),
																																_1: {
																																	ctor: '::',
																																	_0: _elm_lang$core$Native_Utils.chr('g'),
																																	_1: {
																																		ctor: '::',
																																		_0: _elm_lang$core$Native_Utils.chr('h'),
																																		_1: {
																																			ctor: '::',
																																			_0: _elm_lang$core$Native_Utils.chr('i'),
																																			_1: {
																																				ctor: '::',
																																				_0: _elm_lang$core$Native_Utils.chr('j'),
																																				_1: {
																																					ctor: '::',
																																					_0: _elm_lang$core$Native_Utils.chr('k'),
																																					_1: {
																																						ctor: '::',
																																						_0: _elm_lang$core$Native_Utils.chr('l'),
																																						_1: {
																																							ctor: '::',
																																							_0: _elm_lang$core$Native_Utils.chr('m'),
																																							_1: {
																																								ctor: '::',
																																								_0: _elm_lang$core$Native_Utils.chr('n'),
																																								_1: {
																																									ctor: '::',
																																									_0: _elm_lang$core$Native_Utils.chr('o'),
																																									_1: {
																																										ctor: '::',
																																										_0: _elm_lang$core$Native_Utils.chr('p'),
																																										_1: {
																																											ctor: '::',
																																											_0: _elm_lang$core$Native_Utils.chr('q'),
																																											_1: {
																																												ctor: '::',
																																												_0: _elm_lang$core$Native_Utils.chr('r'),
																																												_1: {
																																													ctor: '::',
																																													_0: _elm_lang$core$Native_Utils.chr('s'),
																																													_1: {
																																														ctor: '::',
																																														_0: _elm_lang$core$Native_Utils.chr('t'),
																																														_1: {
																																															ctor: '::',
																																															_0: _elm_lang$core$Native_Utils.chr('u'),
																																															_1: {
																																																ctor: '::',
																																																_0: _elm_lang$core$Native_Utils.chr('v'),
																																																_1: {
																																																	ctor: '::',
																																																	_0: _elm_lang$core$Native_Utils.chr('w'),
																																																	_1: {
																																																		ctor: '::',
																																																		_0: _elm_lang$core$Native_Utils.chr('x'),
																																																		_1: {
																																																			ctor: '::',
																																																			_0: _elm_lang$core$Native_Utils.chr('y'),
																																																			_1: {
																																																				ctor: '::',
																																																				_0: _elm_lang$core$Native_Utils.chr('z'),
																																																				_1: {ctor: '[]'}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Symbols$letter = A2(
	_elm_tools$parser$Parser_ops['|='],
	_elm_tools$parser$Parser$succeed(_elm_lang$core$Basics$identity),
	_elm_tools$parser$Parser$oneOf(
		A2(
			_elm_lang$core$List$map,
			_elm_tools$parser$Parser$symbol,
			A2(_elm_lang$core$List$map, _elm_lang$core$Basics$toString, _user$project$Symbols$letters))));
var _user$project$Symbols$isLetterOrDigitOrUnderscore = function (c) {
	return A2(_elm_lang$core$List$member, c, _user$project$Symbols$letters) || (A2(_elm_lang$core$List$member, c, _user$project$Symbols$digits) || _elm_lang$core$Native_Utils.eq(
		c,
		_elm_lang$core$Native_Utils.chr('_')));
};
var _user$project$Symbols$isSymbol = function (c) {
	return A2(_elm_lang$core$List$member, c, _user$project$Symbols$symbols);
};
var _user$project$Symbols$isDigit = function (c) {
	return A2(_elm_lang$core$List$member, c, _user$project$Symbols$digits);
};
var _user$project$Symbols$isLetter = function (c) {
	return A2(_elm_lang$core$List$member, c, _user$project$Symbols$letters);
};
var _user$project$Symbols$isCharacter = function (c) {
	return _user$project$Symbols$isLetter(c) || (_user$project$Symbols$isDigit(c) || (_user$project$Symbols$isSymbol(c) || _elm_lang$core$Native_Utils.eq(
		c,
		_elm_lang$core$Native_Utils.chr('_'))));
};
var _user$project$Symbols$spaces = _elm_tools$parser$Parser$ignoreWhile(
	function ($char) {
		return _elm_lang$core$Native_Utils.eq(
			$char,
			_elm_lang$core$Native_Utils.chr(' '));
	});
